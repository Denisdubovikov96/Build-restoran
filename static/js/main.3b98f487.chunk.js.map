{"version":3,"sources":["api/GitRestorApi.js","components/nav-bar/nav-bar.js","components/nav-bar/index.js","components/app/App.js","components/app/index.js","index.js"],"names":["fetchRestoran","a","axios","get","then","data","console","log","catch","err","useStyles","makeStyles","theme","root","padding","NavBar","title","basketLenght","classes","React","useState","anchorEl","setAnchorEl","handleClick","AppBar","position","Toolbar","className","variant","IconButton","edge","color","onClick","Badge","badgeContent","SwipeableDrawer","open","onOpen","onClose","anchor","to","fontSize","Typography","ListsContainer","lazy","BasketContainer","createMuiTheme","palette","primary","main","background","paper","App","menu","setMenu","useEffect","fetchAPI","restName","restaurant","company","name","restMenus","categories","restPictures","pictures","basket","setBasket","ThemeProvider","length","fallback","CircularProgress","style","top","left","zIndex","transform","path","addItem","item","count","oldBasket","newItem","id","price","totalPrice","toFixed","index","findIndex","undefined","oldItem","splice","newBasket","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b98f487.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const fetchRestoran = async () => {\r\n    try {\r\n    const data = await axios.get(\"https://nofikoff.github.io/all-restaurants/resta.json\")\r\n        .then((data)=>{\r\n            console.log(data);\r\n            return data;\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err);\r\n        })\r\n\r\n        return data;\r\n    } catch {} \r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { Typography, makeStyles } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"0 24px\",\r\n  },\r\n}));\r\n\r\nexport default function DenseAppBar({ title, basketLenght }) {\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(false);\r\n  const handleClick = () => {\r\n    setAnchorEl(!anchorEl);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"sticky\">\r\n      <Toolbar className={classes.root} variant=\"dense\">\r\n        <IconButton edge=\"start\" color=\"inherit\" onClick={handleClick} >\r\n          <Badge badgeContent={basketLenght} color=\"secondary\">\r\n            <MenuIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <SwipeableDrawer\r\n          open={anchorEl}\r\n          onOpen={handleClick}\r\n          onClose={handleClick}\r\n          anchor=\"left\"\r\n        >\r\n          <Link to=\"/\">\r\n            <IconButton>\r\n              <MenuBookIcon fontSize=\"default\" color=\"primary\" />\r\n            </IconButton>\r\n          </Link>\r\n          <Link to=\"/info\">\r\n            <IconButton>\r\n              <InfoIcon fontSize=\"default\" color=\"primary\" />\r\n            </IconButton>\r\n          </Link>\r\n          <Link to=\"/basket\">\r\n            <IconButton>\r\n              <Badge badgeContent={basketLenght} color=\"secondary\">\r\n                <ShoppingCartIcon fontSize=\"default\" color=\"primary\" />\r\n              </Badge>\r\n            </IconButton>\r\n          </Link>\r\n        </SwipeableDrawer>\r\n        <Typography variant=\"h6\" color=\"inherit\">\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import NavBar from \"./nav-bar\";\r\nexport default NavBar;\r\n","import React, { useState, useEffect, Suspense } from \"react\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { fetchRestoran } from \"../../api/GitRestorApi\";\n\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport NavBar from \"../nav-bar\";\nconst ListsContainer = React.lazy(() => import(\"../lists-container\"));\nconst BasketContainer = React.lazy(() => import(\"../basket-container\"));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#2196f3\",\n    },\n    background: {\n      paper: \"#eceff1\",\n    },\n  },\n});\n\nfunction App() {\n  const [menu, setMenu] = useState();\n  useEffect(() => {\n    console.log(\"рендерим ЮЗ\");\n    const fetchAPI = async () => {\n      console.log(\"рендерим Апп\");\n      setMenu(await fetchRestoran());\n    };\n    fetchAPI();\n    return;\n  }, []);\n  const restName = menu ? menu.data.restaurant.company.name : null;\n  const restMenus = menu ? menu.data.restaurant.menu.categories : null;\n  const restPictures = menu ? menu.data.restaurant.pictures : null;\n  console.log(restPictures);\n\n  const [basket, setBasket] = useState([]);\n  function handlerAddItem(item, count) {\n    // берем старую корзину\n    let oldBasket = basket;\n    // создаем екземляр нового елемента корзины\n    let newItem = {\n      id: item.id,\n      name: item.name,\n      price: item.price,\n      count: count,\n      totalPrice: +(item.price * count).toFixed(2),\n    };\n    // обьявляем новую корзину\n    if (oldBasket.length > 0) {\n      // ищем одинаковые айди\n      const index = oldBasket.findIndex((item) => {\n        return item.id === newItem.id;\n      });\n      // если не нашли ничего не делаем\n      if (index === undefined || index === -1) {\n      } else {\n        // нашли такой же айди\n        let oldItem = oldBasket[index];\n        // к новому елементу добавляем значения старого\n        newItem.count += oldItem.count;\n        newItem.totalPrice += oldItem.totalPrice;\n        //  удаляем старый из масива\n        oldBasket.splice(index, 1);\n      }\n    }\n    // обьявляем новый масив\n    const newBasket = [...oldBasket, newItem];\n    setBasket(newBasket);\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <NavBar basketLenght={basket.length} title={restName} />\n        <Suspense\n          fallback={\n            <CircularProgress\n              color=\"secondary\"\n              style={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                zIndex: 10000,\n                transform: \"scale(3)\",\n              }}\n            />\n          }\n        >\n          <Switch>\n            <Route path=\"/info\">\n              <h2>Тут будет информация</h2>\n            </Route>\n            <Route path=\"/basket\">\n              <BasketContainer basket={basket} />\n            </Route>\n            <Route path=\"/\">\n              <ListsContainer\n                addItem={handlerAddItem}\n                restMenus={restMenus}\n                restPictures={restPictures}\n              />\n            </Route>\n          </Switch>\n        </Suspense>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import App from \"./App\";\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './index.css'\nimport 'fontsource-roboto';\nimport App from \"./components/app\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}